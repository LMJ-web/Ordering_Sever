// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _sever.EF_Core.OrderAndDetail;

#nullable disable

namespace _sever.Migrations.OrderDb
{
    [DbContext(typeof(OrderDbContext))]
    [Migration("20240106155832_addPayState")]
    partial class addPayState
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("_sever.EF_Core.CuisineMenu.Cuisine", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("CuisineDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CuisineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CuisinePictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CuisinePrice")
                        .HasColumnType("decimal(7,2)");

                    b.Property<int?>("T_CuisineType_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("T_CuisineType_Id");

                    b.ToTable("T_Cuisine", (string)null);
                });

            modelBuilder.Entity("_sever.EF_Core.CuisineMenu.CuisineType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("PriorityLevel")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("T_CuisineType", (string)null);
                });

            modelBuilder.Entity("_sever.EF_Core.NavigationMenu.NavigationRecord", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("NavigationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("ParentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PriorityLevel")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("T_NavigationMenu", (string)null);
                });

            modelBuilder.Entity("_sever.EF_Core.OrderAndDetail.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpenId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PayState")
                        .HasColumnType("int");

                    b.Property<string>("TableNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(7,2)");

                    b.HasKey("Id");

                    b.ToTable("T_Order", (string)null);
                });

            modelBuilder.Entity("_sever.EF_Core.OrderAndDetail.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amout")
                        .HasColumnType("decimal(7,2)");

                    b.Property<string>("CuisineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CuisinePrice")
                        .HasColumnType("decimal(7,2)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("T_OrderDetail", (string)null);
                });

            modelBuilder.Entity("_sever.EF_Core.CuisineMenu.Cuisine", b =>
                {
                    b.HasOne("_sever.EF_Core.CuisineMenu.CuisineType", "Cuisine_Type")
                        .WithMany()
                        .HasForeignKey("T_CuisineType_Id");

                    b.Navigation("Cuisine_Type");
                });

            modelBuilder.Entity("_sever.EF_Core.OrderAndDetail.OrderDetail", b =>
                {
                    b.HasOne("_sever.EF_Core.OrderAndDetail.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("_sever.EF_Core.OrderAndDetail.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
